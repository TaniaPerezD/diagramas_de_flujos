{"ast":null,"code":"export function lanzarDado() {\n  return Math.floor(Math.random() * 6) + 1;\n}\nexport function simularJuegos({\n  numSimulaciones,\n  numJuegos,\n  costoJuego,\n  gananciaJugador\n}) {\n  let resultados = [];\n  let sumaGanancia = 0;\n  let sumaJuegosCasa = 0;\n  let sumaPorcentaje = 0;\n  for (let i = 1; i <= numSimulaciones; i++) {\n    let gananciaCasa = 0;\n    let juegosCasa = 0;\n    for (let j = 0; j < numJuegos; j++) {\n      const dado1 = lanzarDado();\n      const dado2 = lanzarDado();\n      const suma = dado1 + dado2;\n      if (suma === 7) {\n        // jugador gana → la casa pierde\n        gananciaCasa -= gananciaJugador;\n      } else {\n        // casa gana → cobra el costo del juego\n        gananciaCasa += costoJuego;\n        juegosCasa++;\n      }\n    }\n    const porcentajeCasa = juegosCasa / numJuegos * 100;\n    resultados.push({\n      num: i,\n      ganancia: gananciaCasa,\n      juegosCasa,\n      porcentajeCasa: porcentajeCasa.toFixed(2)\n    });\n    sumaGanancia += gananciaCasa;\n    sumaJuegosCasa += juegosCasa;\n    sumaPorcentaje += porcentajeCasa;\n  }\n\n  // Cálculo de promedios\n  const promedioGanancia = (sumaGanancia / numSimulaciones).toFixed(2);\n  const promedioJuegos = (sumaJuegosCasa / numSimulaciones).toFixed(2);\n  const promedioPorcentaje = (sumaPorcentaje / numSimulaciones).toFixed(2);\n  return {\n    resultados,\n    promedio: {\n      promedioGanancia,\n      promedioJuegos,\n      promedioPorcentaje\n    }\n  };\n}","map":{"version":3,"names":["lanzarDado","Math","floor","random","simularJuegos","numSimulaciones","numJuegos","costoJuego","gananciaJugador","resultados","sumaGanancia","sumaJuegosCasa","sumaPorcentaje","i","gananciaCasa","juegosCasa","j","dado1","dado2","suma","porcentajeCasa","push","num","ganancia","toFixed","promedioGanancia","promedioJuegos","promedioPorcentaje","promedio"],"sources":["/Users/taniaperez/Documents/GitHub/diagramas_de_flujos/src/funciones/dadosProceso.js"],"sourcesContent":["\nexport function lanzarDado() {\n  return Math.floor(Math.random() * 6) + 1;\n}\n\nexport function simularJuegos({\n  numSimulaciones,\n  numJuegos,\n  costoJuego,\n  gananciaJugador\n}) {\n  let resultados = [];\n  let sumaGanancia = 0;\n  let sumaJuegosCasa = 0;\n  let sumaPorcentaje = 0;\n\n  for (let i = 1; i <= numSimulaciones; i++) {\n    let gananciaCasa = 0;\n    let juegosCasa = 0;\n\n    for (let j = 0; j < numJuegos; j++) {\n      const dado1 = lanzarDado();\n      const dado2 = lanzarDado();\n      const suma = dado1 + dado2;\n\n      if (suma === 7) {\n        // jugador gana → la casa pierde\n        gananciaCasa -= gananciaJugador;\n      } else {\n        // casa gana → cobra el costo del juego\n        gananciaCasa += costoJuego;\n        juegosCasa++;\n      }\n    }\n\n    const porcentajeCasa = (juegosCasa / numJuegos) * 100;\n\n    resultados.push({\n      num: i,\n      ganancia: gananciaCasa,\n      juegosCasa,\n      porcentajeCasa: porcentajeCasa.toFixed(2),\n    });\n\n    sumaGanancia += gananciaCasa;\n    sumaJuegosCasa += juegosCasa;\n    sumaPorcentaje += porcentajeCasa;\n  }\n\n  // Cálculo de promedios\n  const promedioGanancia = (sumaGanancia / numSimulaciones).toFixed(2);\n  const promedioJuegos = (sumaJuegosCasa / numSimulaciones).toFixed(2);\n  const promedioPorcentaje = (sumaPorcentaje / numSimulaciones).toFixed(2);\n\n  return {\n    resultados,\n    promedio: {\n      promedioGanancia,\n      promedioJuegos,\n      promedioPorcentaje,\n    },\n  };\n}\n"],"mappings":"AACA,OAAO,SAASA,UAAUA,CAAA,EAAG;EAC3B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC1C;AAEA,OAAO,SAASC,aAAaA,CAAC;EAC5BC,eAAe;EACfC,SAAS;EACTC,UAAU;EACVC;AACF,CAAC,EAAE;EACD,IAAIC,UAAU,GAAG,EAAE;EACnB,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAIC,cAAc,GAAG,CAAC;EACtB,IAAIC,cAAc,GAAG,CAAC;EAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIR,eAAe,EAAEQ,CAAC,EAAE,EAAE;IACzC,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,UAAU,GAAG,CAAC;IAElB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,SAAS,EAAEU,CAAC,EAAE,EAAE;MAClC,MAAMC,KAAK,GAAGjB,UAAU,CAAC,CAAC;MAC1B,MAAMkB,KAAK,GAAGlB,UAAU,CAAC,CAAC;MAC1B,MAAMmB,IAAI,GAAGF,KAAK,GAAGC,KAAK;MAE1B,IAAIC,IAAI,KAAK,CAAC,EAAE;QACd;QACAL,YAAY,IAAIN,eAAe;MACjC,CAAC,MAAM;QACL;QACAM,YAAY,IAAIP,UAAU;QAC1BQ,UAAU,EAAE;MACd;IACF;IAEA,MAAMK,cAAc,GAAIL,UAAU,GAAGT,SAAS,GAAI,GAAG;IAErDG,UAAU,CAACY,IAAI,CAAC;MACdC,GAAG,EAAET,CAAC;MACNU,QAAQ,EAAET,YAAY;MACtBC,UAAU;MACVK,cAAc,EAAEA,cAAc,CAACI,OAAO,CAAC,CAAC;IAC1C,CAAC,CAAC;IAEFd,YAAY,IAAII,YAAY;IAC5BH,cAAc,IAAII,UAAU;IAC5BH,cAAc,IAAIQ,cAAc;EAClC;;EAEA;EACA,MAAMK,gBAAgB,GAAG,CAACf,YAAY,GAAGL,eAAe,EAAEmB,OAAO,CAAC,CAAC,CAAC;EACpE,MAAME,cAAc,GAAG,CAACf,cAAc,GAAGN,eAAe,EAAEmB,OAAO,CAAC,CAAC,CAAC;EACpE,MAAMG,kBAAkB,GAAG,CAACf,cAAc,GAAGP,eAAe,EAAEmB,OAAO,CAAC,CAAC,CAAC;EAExE,OAAO;IACLf,UAAU;IACVmB,QAAQ,EAAE;MACRH,gBAAgB;MAChBC,cAAc;MACdC;IACF;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}