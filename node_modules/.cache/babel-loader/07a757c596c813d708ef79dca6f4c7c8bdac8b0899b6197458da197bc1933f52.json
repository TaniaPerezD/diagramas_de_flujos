{"ast":null,"code":"var _jsxFileName = \"/Users/taniaperez/Documents/GitHub/diagramas_de_flujos/src/components/MethodsGrid/MethodsGrid.jsx\";\nimport Card from \"../Card/Card\";\nimport styles from \"./MethodsGrid.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  id: \"cuadrados\",\n  title: \"Cuadrados Medios\",\n  text: \"Eleva al cuadrado la semilla y toma los dígitos centrales como número aleatorio.\"\n}, {\n  id: \"productos\",\n  title: \"Productos Medios\",\n  text: \"Usa dos semillas; al multiplicarlas, se extraen los dígitos centrales del producto.\"\n}, {\n  id: \"lineal\",\n  title: \"Algoritmo Lineal\",\n  text: \"Usa constante multiplicativa, incremento y módulo para generar la secuencia.\"\n}, {\n  id: \"multiplicativo\",\n  title: \"Algoritmo Multiplicativo\",\n  text: \"Como el lineal pero sin incremento; depende solo de la multiplicación y el módulo.\"\n}];\nexport default function MethodsGrid() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    id: \"inicio\",\n    \"aria-label\": \"M\\xE9todos de generaci\\xF3n\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"section-title\",\n      children: \"Generaci\\xF3n de N\\xFAmeros Aleatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"section-subtitle\",\n      children: \"Los n\\xFAmeros aleatorios son clave en simulaciones, criptograf\\xEDa y estad\\xEDstica. Estos son algunos m\\xE9todos cl\\xE1sicos para generarlos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: items.map(it => /*#__PURE__*/_jsxDEV(Card, {\n        title: it.title,\n        onClick: () => console.log(it.id),\n        children: it.text\n      }, it.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = MethodsGrid;\nvar _c;\n$RefreshReg$(_c, \"MethodsGrid\");","map":{"version":3,"names":["Card","styles","jsxDEV","_jsxDEV","items","id","title","text","MethodsGrid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","grid","map","it","onClick","console","log","_c","$RefreshReg$"],"sources":["/Users/taniaperez/Documents/GitHub/diagramas_de_flujos/src/components/MethodsGrid/MethodsGrid.jsx"],"sourcesContent":["import Card from \"../Card/Card\";\nimport styles from \"./MethodsGrid.module.css\";\n\nconst items = [\n  {\n    id: \"cuadrados\",\n    title: \"Cuadrados Medios\",\n    text:\n      \"Eleva al cuadrado la semilla y toma los dígitos centrales como número aleatorio.\"\n  },\n  {\n    id: \"productos\",\n    title: \"Productos Medios\",\n    text:\n      \"Usa dos semillas; al multiplicarlas, se extraen los dígitos centrales del producto.\"\n  },\n  {\n    id: \"lineal\",\n    title: \"Algoritmo Lineal\",\n    text:\n      \"Usa constante multiplicativa, incremento y módulo para generar la secuencia.\"\n  },\n  {\n    id: \"multiplicativo\",\n    title: \"Algoritmo Multiplicativo\",\n    text:\n      \"Como el lineal pero sin incremento; depende solo de la multiplicación y el módulo.\"\n  }\n];\n\nexport default function MethodsGrid() {\n  return (\n    <section className=\"container\" id=\"inicio\" aria-label=\"Métodos de generación\">\n      <h1 className=\"section-title\">Generación de Números Aleatorios</h1>\n      <p className=\"section-subtitle\">\n        Los números aleatorios son clave en simulaciones, criptografía y estadística.\n        Estos son algunos métodos clásicos para generarlos.\n      </p>\n\n      <div className={styles.grid}>\n        {items.map((it) => (\n          <Card key={it.id} title={it.title} onClick={() => console.log(it.id)}>\n            {it.text}\n          </Card>\n        ))}\n      </div>\n    </section>\n  );\n}\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAG,CACZ;EACEC,EAAE,EAAE,WAAW;EACfC,KAAK,EAAE,kBAAkB;EACzBC,IAAI,EACF;AACJ,CAAC,EACD;EACEF,EAAE,EAAE,WAAW;EACfC,KAAK,EAAE,kBAAkB;EACzBC,IAAI,EACF;AACJ,CAAC,EACD;EACEF,EAAE,EAAE,QAAQ;EACZC,KAAK,EAAE,kBAAkB;EACzBC,IAAI,EACF;AACJ,CAAC,EACD;EACEF,EAAE,EAAE,gBAAgB;EACpBC,KAAK,EAAE,0BAA0B;EACjCC,IAAI,EACF;AACJ,CAAC,CACF;AAED,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,oBACEL,OAAA;IAASM,SAAS,EAAC,WAAW;IAACJ,EAAE,EAAC,QAAQ;IAAC,cAAW,6BAAuB;IAAAK,QAAA,gBAC3EP,OAAA;MAAIM,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnEX,OAAA;MAAGM,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAGhC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEJX,OAAA;MAAKM,SAAS,EAAER,MAAM,CAACc,IAAK;MAAAL,QAAA,EACzBN,KAAK,CAACY,GAAG,CAAEC,EAAE,iBACZd,OAAA,CAACH,IAAI;QAAaM,KAAK,EAAEW,EAAE,CAACX,KAAM;QAACY,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAACH,EAAE,CAACZ,EAAE,CAAE;QAAAK,QAAA,EAClEO,EAAE,CAACV;MAAI,GADCU,EAAE,CAACZ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACO,EAAA,GAlBuBb,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}