{"ast":null,"code":"var _jsxFileName = \"/Users/taniaperez/Documents/GitHub/diagramas_de_flujos/src/pages/Azucar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/simulacion.css';\n\n// ======= FUNCIONES AUXILIARES =======\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction expRand(mean) {\n  const u = Math.random();\n  return -Math.log(1 - u) * mean;\n}\nfunction uniformRand(a, b) {\n  return a + (b - a) * Math.random();\n}\n\n// ======= FUNCIÓN PRINCIPAL =======\nfunction simularInventario({\n  horizonDays = 27,\n  capacity = 700,\n  meanDemand = 100,\n  orderCost = 100,\n  carryCostPerKgDay = 0.1,\n  unitAcqCost = 3.5,\n  unitSellPrice = 5.0,\n  initialInventory = capacity\n}) {\n  const reviewPeriod = 7;\n  const leadMin = 1;\n  const leadMax = 3;\n  let CD = 0;\n  let IAZU = initialInventory;\n  let PAZU = 0;\n  let TENT = \"-\";\n  let pendingOrders = [];\n  let CTORD = 0;\n  let CTADQ = 0;\n  let CTINV = 0;\n  let CTOT = 0;\n  let totalDemand = 0;\n  let totalSold = 0;\n  let totalLost = 0;\n  let revenue = 0;\n  const tabla = [];\n  for (CD = 1; CD <= horizonDays; CD++) {\n    // Llegadas de pedidos\n    for (let i = pendingOrders.length - 1; i >= 0; i--) {\n      if (pendingOrders[i].arrivalDay <= CD) {\n        const qty = pendingOrders[i].qty;\n        IAZU = Math.min(IAZU + qty, capacity);\n        pendingOrders.splice(i, 1);\n      }\n    }\n    PAZU = 0;\n    if (CD % reviewPeriod === 0) {\n      const orderQty = Math.max(0, capacity - IAZU);\n      if (orderQty > 0) {\n        PAZU = orderQty;\n        let lead = Math.round(uniformRand(leadMin, leadMax));\n        lead = Math.min(3, Math.max(1, lead));\n        const arrivalDay = CD + lead;\n        pendingOrders.push({\n          qty: orderQty,\n          arrivalDay\n        });\n        TENT = lead;\n        CTORD += orderCost;\n        CTADQ += orderQty * unitAcqCost;\n      }\n    } else {\n      if (pendingOrders.length > 0) {\n        const next = Math.min(...pendingOrders.map(o => o.arrivalDay - CD));\n        TENT = Math.max(0, next);\n      } else {\n        TENT = Infinity;\n      }\n    }\n    const DAZU = Math.round(expRand(meanDemand));\n    totalDemand += DAZU;\n    const sold = Math.min(IAZU, DAZU);\n    const lost = Math.max(0, DAZU - sold);\n    totalSold += sold;\n    totalLost += lost;\n    revenue += sold * unitSellPrice;\n    IAZU -= sold;\n    CTINV += IAZU * carryCostPerKgDay;\n    CTOT = CTORD + CTADQ + CTINV;\n    tabla.push({\n      Día: CD,\n      Inventario: IAZU.toFixed(2),\n      Demanda: DAZU.toFixed(2),\n      Pedido: PAZU.toFixed(2),\n      TiempoEntrega: isFinite(TENT) ? TENT.toFixed(0) : \"-\",\n      CostoOrden: CTORD.toFixed(2),\n      CostoAdquisicion: CTADQ.toFixed(2),\n      CostoInventario: CTINV.toFixed(2),\n      CostoTotal: CTOT.toFixed(2),\n      PerdidaAcumulada: totalLost.toFixed(2)\n    });\n  }\n  return {\n    tabla,\n    resultados: {\n      DemandaTotal: totalDemand,\n      TotalVendido: totalSold,\n      DemandaInsatisfecha: totalLost,\n      CostoTotal: CTOT,\n      Ingresos: revenue,\n      GananciaNeta: revenue - CTOT,\n      NivelServicio: totalSold / totalDemand * 100\n    }\n  };\n}\nexport default function SimulacionEventos() {\n  _s();\n  const [numSimulaciones, setNumSimulaciones] = useState(10);\n  const [horizonDays, setHorizonDays] = useState(27);\n  const [capacity, setCapacity] = useState(700);\n  const [meanDemand, setMeanDemand] = useState(100);\n  const [orderCost, setOrderCost] = useState(100);\n  const [carryCostPerKgDay, setCarryCostPerKgDay] = useState(0.1);\n  const [unitAcqCost, setUnitAcqCost] = useState(3.5);\n  const [unitSellPrice, setUnitSellPrice] = useState(5.0);\n  const [initialInventory, setInitialInventory] = useState(700);\n  const [resultadosPromedio, setResultadosPromedio] = useState(null);\n  const ejecutarSimulacion = () => {\n    let acumulado = {\n      DemandaTotal: 0,\n      TotalVendido: 0,\n      DemandaInsatisfecha: 0,\n      CostoTotal: 0,\n      Ingresos: 0,\n      GananciaNeta: 0,\n      NivelServicio: 0\n    };\n    for (let i = 0; i < numSimulaciones; i++) {\n      const salida = simularInventario({\n        horizonDays,\n        capacity,\n        meanDemand,\n        orderCost,\n        carryCostPerKgDay,\n        unitAcqCost,\n        unitSellPrice,\n        initialInventory\n      });\n      const r = salida.resultados;\n      acumulado.DemandaTotal += parseFloat(r.DemandaTotal);\n      acumulado.TotalVendido += parseFloat(r.TotalVendido);\n      acumulado.DemandaInsatisfecha += parseFloat(r.DemandaInsatisfecha);\n      acumulado.CostoTotal += parseFloat(r.CostoTotal);\n      acumulado.Ingresos += parseFloat(r.Ingresos);\n      acumulado.GananciaNeta += parseFloat(r.GananciaNeta);\n      acumulado.NivelServicio += parseFloat(r.NivelServicio.replace('%', ''));\n    }\n    const promedio = {\n      DemandaTotal: (acumulado.DemandaTotal / numSimulaciones).toFixed(2),\n      TotalVendido: (acumulado.TotalVendido / numSimulaciones).toFixed(2),\n      DemandaInsatisfecha: (acumulado.DemandaInsatisfecha / numSimulaciones).toFixed(2),\n      CostoTotal: (acumulado.CostoTotal / numSimulaciones).toFixed(2),\n      Ingresos: (acumulado.Ingresos / numSimulaciones).toFixed(2),\n      GananciaNeta: (acumulado.GananciaNeta / numSimulaciones).toFixed(2),\n      NivelServicio: (acumulado.NivelServicio / numSimulaciones).toFixed(2) + \"%\"\n    };\n    setResultadosPromedio(promedio);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simulaci\\xF3n de Inventario de Az\\xFAcar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problema-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columnas\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columna-izquierda\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Configuraci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"N\\xFAmero de simulaciones:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  value: numSimulaciones,\n                  onChange: e => setNumSimulaciones(Number(e.target.value) || 1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"D\\xEDas del horizonte:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  value: horizonDays,\n                  onChange: e => setHorizonDays(parseInt(e.target.value) || 1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Capacidad (kg):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: capacity,\n                  onChange: e => setCapacity(Number(e.target.value) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Demanda media:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.1\",\n                  value: meanDemand,\n                  onChange: e => setMeanDemand(Number(e.target.value) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Costo de orden:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: orderCost,\n                  onChange: e => setOrderCost(Number(e.target.value) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Costo inventario (por kg/d\\xEDa):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: carryCostPerKgDay,\n                  onChange: e => setCarryCostPerKgDay(Number(e.target.value) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Costo adquisici\\xF3n/unidad:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: unitAcqCost,\n                  onChange: e => setUnitAcqCost(Number(e.target.value) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Precio venta/unidad:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: unitSellPrice,\n                  onChange: e => setUnitSellPrice(Number(e.target.value) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Inventario inicial:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: initialInventory,\n                  onChange: e => setInitialInventory(Number(e.target.value) || 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: ejecutarSimulacion,\n                className: \"btn-simular\",\n                children: \"Ejecutar simulaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columna-derecha\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Resultados Promedio (\", numSimulaciones, \" simulaciones)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), resultadosPromedio ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tarjetas-resultados\",\n                children: Object.entries(resultadosPromedio).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tarjeta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: key.replace(/([A-Z])/g, ' $1')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 25\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"sin-datos\",\n                children: \"Ejecuta la simulaci\\xF3n para ver resultados promedios.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(SimulacionEventos, \"Ocw+DOI4irxWr2+MKNWJzPtHbWM=\");\n_c = SimulacionEventos;\nvar _c;\n$RefreshReg$(_c, \"SimulacionEventos\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","expRand","mean","u","Math","random","log","uniformRand","a","b","simularInventario","horizonDays","capacity","meanDemand","orderCost","carryCostPerKgDay","unitAcqCost","unitSellPrice","initialInventory","reviewPeriod","leadMin","leadMax","CD","IAZU","PAZU","TENT","pendingOrders","CTORD","CTADQ","CTINV","CTOT","totalDemand","totalSold","totalLost","revenue","tabla","i","length","arrivalDay","qty","min","splice","orderQty","max","lead","round","push","next","map","o","Infinity","DAZU","sold","lost","Día","Inventario","toFixed","Demanda","Pedido","TiempoEntrega","isFinite","CostoOrden","CostoAdquisicion","CostoInventario","CostoTotal","PerdidaAcumulada","resultados","DemandaTotal","TotalVendido","DemandaInsatisfecha","Ingresos","GananciaNeta","NivelServicio","SimulacionEventos","_s","numSimulaciones","setNumSimulaciones","setHorizonDays","setCapacity","setMeanDemand","setOrderCost","setCarryCostPerKgDay","setUnitAcqCost","setUnitSellPrice","setInitialInventory","resultadosPromedio","setResultadosPromedio","ejecutarSimulacion","acumulado","salida","r","parseFloat","replace","promedio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","parseInt","step","onClick","Object","entries","key","_c","$RefreshReg$"],"sources":["/Users/taniaperez/Documents/GitHub/diagramas_de_flujos/src/pages/Azucar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/simulacion.css';\n\n// ======= FUNCIONES AUXILIARES =======\nfunction expRand(mean) {\n  const u = Math.random();\n  return -Math.log(1 - u) * mean;\n}\n\nfunction uniformRand(a, b) {\n  return a + (b - a) * Math.random();\n}\n\n// ======= FUNCIÓN PRINCIPAL =======\nfunction simularInventario({\n  horizonDays = 27,\n  capacity = 700,\n  meanDemand = 100,\n  orderCost = 100,\n  carryCostPerKgDay = 0.1,\n  unitAcqCost = 3.5,\n  unitSellPrice = 5.0,\n  initialInventory = capacity,\n}) {\n  const reviewPeriod = 7;\n  const leadMin = 1;\n  const leadMax = 3;\n\n  let CD = 0;\n  let IAZU = initialInventory;\n  let PAZU = 0;\n  let TENT = \"-\";\n  let pendingOrders = [];\n\n  let CTORD = 0;\n  let CTADQ = 0;\n  let CTINV = 0;\n  let CTOT = 0;\n\n  let totalDemand = 0;\n  let totalSold = 0;\n  let totalLost = 0;\n  let revenue = 0;\n\n  const tabla = [];\n\n  for (CD = 1; CD <= horizonDays; CD++) {\n    // Llegadas de pedidos\n    for (let i = pendingOrders.length - 1; i >= 0; i--) {\n      if (pendingOrders[i].arrivalDay <= CD) {\n        const qty = pendingOrders[i].qty;\n        IAZU = Math.min(IAZU + qty, capacity);\n        pendingOrders.splice(i, 1);\n      }\n    }\n\n    PAZU = 0;\n    if (CD % reviewPeriod === 0) {\n      const orderQty = Math.max(0, capacity - IAZU);\n      if (orderQty > 0) {\n        PAZU = orderQty;\n        let lead = Math.round(uniformRand(leadMin, leadMax));\n        lead = Math.min(3, Math.max(1, lead));\n        const arrivalDay = CD + lead;\n        pendingOrders.push({ qty: orderQty, arrivalDay });\n        TENT = lead;\n\n        CTORD += orderCost;\n        CTADQ += orderQty * unitAcqCost;\n      }\n    } else {\n      if (pendingOrders.length > 0) {\n        const next = Math.min(...pendingOrders.map(o => o.arrivalDay - CD));\n        TENT = Math.max(0, next);\n      } else {\n        TENT = Infinity;\n      }\n    }\n\n    const DAZU = Math.round(expRand(meanDemand));\n    totalDemand += DAZU;\n    const sold = Math.min(IAZU, DAZU);\n    const lost = Math.max(0, DAZU - sold);\n    totalSold += sold;\n    totalLost += lost;\n    revenue += sold * unitSellPrice;\n    IAZU -= sold;\n\n    CTINV += IAZU * carryCostPerKgDay;\n    CTOT = CTORD + CTADQ + CTINV;\n\n    tabla.push({\n      Día: CD,\n      Inventario: IAZU.toFixed(2),\n      Demanda: DAZU.toFixed(2),\n      Pedido: PAZU.toFixed(2),\n      TiempoEntrega: isFinite(TENT) ? TENT.toFixed(0) : \"-\",\n      CostoOrden: CTORD.toFixed(2),\n      CostoAdquisicion: CTADQ.toFixed(2),\n      CostoInventario: CTINV.toFixed(2),\n      CostoTotal: CTOT.toFixed(2),\n      PerdidaAcumulada: totalLost.toFixed(2),\n    });\n  }\n\n  return {\n    tabla,\n    resultados: {\n      DemandaTotal: totalDemand,\n      TotalVendido: totalSold,\n      DemandaInsatisfecha: totalLost,\n      CostoTotal: CTOT,\n      Ingresos: revenue,\n      GananciaNeta: revenue - CTOT,\n      NivelServicio: (totalSold / totalDemand) * 100,\n    },\n  };\n}\n\nexport default function SimulacionEventos() {\n  const [numSimulaciones, setNumSimulaciones] = useState(10);\n  const [horizonDays, setHorizonDays] = useState(27);\n  const [capacity, setCapacity] = useState(700);\n  const [meanDemand, setMeanDemand] = useState(100);\n  const [orderCost, setOrderCost] = useState(100);\n  const [carryCostPerKgDay, setCarryCostPerKgDay] = useState(0.1);\n  const [unitAcqCost, setUnitAcqCost] = useState(3.5);\n  const [unitSellPrice, setUnitSellPrice] = useState(5.0);\n  const [initialInventory, setInitialInventory] = useState(700);\n\n  const [resultadosPromedio, setResultadosPromedio] = useState(null);\n\n  const ejecutarSimulacion = () => {\n    let acumulado = {\n      DemandaTotal: 0,\n      TotalVendido: 0,\n      DemandaInsatisfecha: 0,\n      CostoTotal: 0,\n      Ingresos: 0,\n      GananciaNeta: 0,\n      NivelServicio: 0,\n    };\n\n    for (let i = 0; i < numSimulaciones; i++) {\n      const salida = simularInventario({\n        horizonDays,\n        capacity,\n        meanDemand,\n        orderCost,\n        carryCostPerKgDay,\n        unitAcqCost,\n        unitSellPrice,\n        initialInventory,\n      });\n\n      const r = salida.resultados;\n      acumulado.DemandaTotal += parseFloat(r.DemandaTotal);\n      acumulado.TotalVendido += parseFloat(r.TotalVendido);\n      acumulado.DemandaInsatisfecha += parseFloat(r.DemandaInsatisfecha);\n      acumulado.CostoTotal += parseFloat(r.CostoTotal);\n      acumulado.Ingresos += parseFloat(r.Ingresos);\n      acumulado.GananciaNeta += parseFloat(r.GananciaNeta);\n      acumulado.NivelServicio += parseFloat(r.NivelServicio.replace('%', ''));\n    }\n\n    const promedio = {\n      DemandaTotal: (acumulado.DemandaTotal / numSimulaciones).toFixed(2),\n      TotalVendido: (acumulado.TotalVendido / numSimulaciones).toFixed(2),\n      DemandaInsatisfecha: (acumulado.DemandaInsatisfecha / numSimulaciones).toFixed(2),\n      CostoTotal: (acumulado.CostoTotal / numSimulaciones).toFixed(2),\n      Ingresos: (acumulado.Ingresos / numSimulaciones).toFixed(2),\n      GananciaNeta: (acumulado.GananciaNeta / numSimulaciones).toFixed(2),\n      NivelServicio: ((acumulado.NivelServicio / numSimulaciones).toFixed(2)) + \"%\",\n    };\n\n    setResultadosPromedio(promedio);\n  };\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <h1>Simulación de Inventario de Azúcar</h1>\n      </header>\n\n      <div className=\"content\">\n        <div className=\"problema-section\">\n          <div className=\"columnas\">\n            {/* Columna Izquierda */}\n            <div className=\"columna-izquierda\">\n              <div className=\"card\">\n                <h3>Configuración</h3>\n\n                <div className=\"input-group\">\n                  <label>Número de simulaciones:</label>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    value={numSimulaciones}\n                    onChange={(e) => setNumSimulaciones(Number(e.target.value) || 1)}\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Días del horizonte:</label>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    value={horizonDays}\n                    onChange={(e) => setHorizonDays(parseInt(e.target.value) || 1)}\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Capacidad (kg):</label>\n                  <input\n                    type=\"number\"\n                    value={capacity}\n                    onChange={(e) => setCapacity(Number(e.target.value) || 0)}\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Demanda media:</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={meanDemand}\n                    onChange={(e) => setMeanDemand(Number(e.target.value) || 0)}\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Costo de orden:</label>\n                  <input\n                    type=\"number\"\n                    value={orderCost}\n                    onChange={(e) => setOrderCost(Number(e.target.value) || 0)}\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Costo inventario (por kg/día):</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={carryCostPerKgDay}\n                    onChange={(e) => setCarryCostPerKgDay(Number(e.target.value) || 0)}\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Costo adquisición/unidad:</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={unitAcqCost}\n                    onChange={(e) => setUnitAcqCost(Number(e.target.value) || 0)}\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Precio venta/unidad:</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={unitSellPrice}\n                    onChange={(e) => setUnitSellPrice(Number(e.target.value) || 0)}\n                  />\n                </div>\n\n                <div className=\"input-group\">\n                  <label>Inventario inicial:</label>\n                  <input\n                    type=\"number\"\n                    value={initialInventory}\n                    onChange={(e) => setInitialInventory(Number(e.target.value) || 0)}\n                  />\n                </div>\n\n                <button onClick={ejecutarSimulacion} className=\"btn-simular\">\n                  Ejecutar simulación\n                </button>\n              </div>\n            </div>\n\n            {/* Columna Derecha */}\n            <div className=\"columna-derecha\">\n              <div className=\"card\">\n                <h3>Resultados Promedio ({numSimulaciones} simulaciones)</h3>\n\n                {resultadosPromedio ? (\n                  <div className=\"tarjetas-resultados\">\n                    {Object.entries(resultadosPromedio).map(([key, value]) => (\n                      <div key={key} className=\"tarjeta\">\n                        <h4>{key.replace(/([A-Z])/g, ' $1')}</h4>\n                        <p>{value}</p>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"sin-datos\">\n                    Ejecuta la simulación para ver resultados promedios.\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAACC,IAAI,EAAE;EACrB,MAAMC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;EACvB,OAAO,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,GAAGH,CAAC,CAAC,GAAGD,IAAI;AAChC;AAEA,SAASK,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAOD,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAC,IAAIJ,IAAI,CAACC,MAAM,CAAC,CAAC;AACpC;;AAEA;AACA,SAASK,iBAAiBA,CAAC;EACzBC,WAAW,GAAG,EAAE;EAChBC,QAAQ,GAAG,GAAG;EACdC,UAAU,GAAG,GAAG;EAChBC,SAAS,GAAG,GAAG;EACfC,iBAAiB,GAAG,GAAG;EACvBC,WAAW,GAAG,GAAG;EACjBC,aAAa,GAAG,GAAG;EACnBC,gBAAgB,GAAGN;AACrB,CAAC,EAAE;EACD,MAAMO,YAAY,GAAG,CAAC;EACtB,MAAMC,OAAO,GAAG,CAAC;EACjB,MAAMC,OAAO,GAAG,CAAC;EAEjB,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,IAAI,GAAGL,gBAAgB;EAC3B,IAAIM,IAAI,GAAG,CAAC;EACZ,IAAIC,IAAI,GAAG,GAAG;EACd,IAAIC,aAAa,GAAG,EAAE;EAEtB,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,IAAI,GAAG,CAAC;EAEZ,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIC,OAAO,GAAG,CAAC;EAEf,MAAMC,KAAK,GAAG,EAAE;EAEhB,KAAKb,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAIX,WAAW,EAAEW,EAAE,EAAE,EAAE;IACpC;IACA,KAAK,IAAIc,CAAC,GAAGV,aAAa,CAACW,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAClD,IAAIV,aAAa,CAACU,CAAC,CAAC,CAACE,UAAU,IAAIhB,EAAE,EAAE;QACrC,MAAMiB,GAAG,GAAGb,aAAa,CAACU,CAAC,CAAC,CAACG,GAAG;QAChChB,IAAI,GAAGnB,IAAI,CAACoC,GAAG,CAACjB,IAAI,GAAGgB,GAAG,EAAE3B,QAAQ,CAAC;QACrCc,aAAa,CAACe,MAAM,CAACL,CAAC,EAAE,CAAC,CAAC;MAC5B;IACF;IAEAZ,IAAI,GAAG,CAAC;IACR,IAAIF,EAAE,GAAGH,YAAY,KAAK,CAAC,EAAE;MAC3B,MAAMuB,QAAQ,GAAGtC,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE/B,QAAQ,GAAGW,IAAI,CAAC;MAC7C,IAAImB,QAAQ,GAAG,CAAC,EAAE;QAChBlB,IAAI,GAAGkB,QAAQ;QACf,IAAIE,IAAI,GAAGxC,IAAI,CAACyC,KAAK,CAACtC,WAAW,CAACa,OAAO,EAAEC,OAAO,CAAC,CAAC;QACpDuB,IAAI,GAAGxC,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAEpC,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEC,IAAI,CAAC,CAAC;QACrC,MAAMN,UAAU,GAAGhB,EAAE,GAAGsB,IAAI;QAC5BlB,aAAa,CAACoB,IAAI,CAAC;UAAEP,GAAG,EAAEG,QAAQ;UAAEJ;QAAW,CAAC,CAAC;QACjDb,IAAI,GAAGmB,IAAI;QAEXjB,KAAK,IAAIb,SAAS;QAClBc,KAAK,IAAIc,QAAQ,GAAG1B,WAAW;MACjC;IACF,CAAC,MAAM;MACL,IAAIU,aAAa,CAACW,MAAM,GAAG,CAAC,EAAE;QAC5B,MAAMU,IAAI,GAAG3C,IAAI,CAACoC,GAAG,CAAC,GAAGd,aAAa,CAACsB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACX,UAAU,GAAGhB,EAAE,CAAC,CAAC;QACnEG,IAAI,GAAGrB,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEI,IAAI,CAAC;MAC1B,CAAC,MAAM;QACLtB,IAAI,GAAGyB,QAAQ;MACjB;IACF;IAEA,MAAMC,IAAI,GAAG/C,IAAI,CAACyC,KAAK,CAAC5C,OAAO,CAACY,UAAU,CAAC,CAAC;IAC5CkB,WAAW,IAAIoB,IAAI;IACnB,MAAMC,IAAI,GAAGhD,IAAI,CAACoC,GAAG,CAACjB,IAAI,EAAE4B,IAAI,CAAC;IACjC,MAAME,IAAI,GAAGjD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEQ,IAAI,GAAGC,IAAI,CAAC;IACrCpB,SAAS,IAAIoB,IAAI;IACjBnB,SAAS,IAAIoB,IAAI;IACjBnB,OAAO,IAAIkB,IAAI,GAAGnC,aAAa;IAC/BM,IAAI,IAAI6B,IAAI;IAEZvB,KAAK,IAAIN,IAAI,GAAGR,iBAAiB;IACjCe,IAAI,GAAGH,KAAK,GAAGC,KAAK,GAAGC,KAAK;IAE5BM,KAAK,CAACW,IAAI,CAAC;MACTQ,GAAG,EAAEhC,EAAE;MACPiC,UAAU,EAAEhC,IAAI,CAACiC,OAAO,CAAC,CAAC,CAAC;MAC3BC,OAAO,EAAEN,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC;MACxBE,MAAM,EAAElC,IAAI,CAACgC,OAAO,CAAC,CAAC,CAAC;MACvBG,aAAa,EAAEC,QAAQ,CAACnC,IAAI,CAAC,GAAGA,IAAI,CAAC+B,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;MACrDK,UAAU,EAAElC,KAAK,CAAC6B,OAAO,CAAC,CAAC,CAAC;MAC5BM,gBAAgB,EAAElC,KAAK,CAAC4B,OAAO,CAAC,CAAC,CAAC;MAClCO,eAAe,EAAElC,KAAK,CAAC2B,OAAO,CAAC,CAAC,CAAC;MACjCQ,UAAU,EAAElC,IAAI,CAAC0B,OAAO,CAAC,CAAC,CAAC;MAC3BS,gBAAgB,EAAEhC,SAAS,CAACuB,OAAO,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ;EAEA,OAAO;IACLrB,KAAK;IACL+B,UAAU,EAAE;MACVC,YAAY,EAAEpC,WAAW;MACzBqC,YAAY,EAAEpC,SAAS;MACvBqC,mBAAmB,EAAEpC,SAAS;MAC9B+B,UAAU,EAAElC,IAAI;MAChBwC,QAAQ,EAAEpC,OAAO;MACjBqC,YAAY,EAAErC,OAAO,GAAGJ,IAAI;MAC5B0C,aAAa,EAAGxC,SAAS,GAAGD,WAAW,GAAI;IAC7C;EACF,CAAC;AACH;AAEA,eAAe,SAAS0C,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG9E,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,WAAW,EAAEkE,cAAc,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,QAAQ,EAAEkE,WAAW,CAAC,GAAGhF,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM,CAACe,UAAU,EAAEkE,aAAa,CAAC,GAAGjF,QAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAACgB,SAAS,EAAEkE,YAAY,CAAC,GAAGlF,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAM,CAACiB,iBAAiB,EAAEkE,oBAAoB,CAAC,GAAGnF,QAAQ,CAAC,GAAG,CAAC;EAC/D,MAAM,CAACkB,WAAW,EAAEkE,cAAc,CAAC,GAAGpF,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACmB,aAAa,EAAEkE,gBAAgB,CAAC,GAAGrF,QAAQ,CAAC,GAAG,CAAC;EACvD,MAAM,CAACoB,gBAAgB,EAAEkE,mBAAmB,CAAC,GAAGtF,QAAQ,CAAC,GAAG,CAAC;EAE7D,MAAM,CAACuF,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxF,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMyF,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,SAAS,GAAG;MACdrB,YAAY,EAAE,CAAC;MACfC,YAAY,EAAE,CAAC;MACfC,mBAAmB,EAAE,CAAC;MACtBL,UAAU,EAAE,CAAC;MACbM,QAAQ,EAAE,CAAC;MACXC,YAAY,EAAE,CAAC;MACfC,aAAa,EAAE;IACjB,CAAC;IAED,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuC,eAAe,EAAEvC,CAAC,EAAE,EAAE;MACxC,MAAMqD,MAAM,GAAG/E,iBAAiB,CAAC;QAC/BC,WAAW;QACXC,QAAQ;QACRC,UAAU;QACVC,SAAS;QACTC,iBAAiB;QACjBC,WAAW;QACXC,aAAa;QACbC;MACF,CAAC,CAAC;MAEF,MAAMwE,CAAC,GAAGD,MAAM,CAACvB,UAAU;MAC3BsB,SAAS,CAACrB,YAAY,IAAIwB,UAAU,CAACD,CAAC,CAACvB,YAAY,CAAC;MACpDqB,SAAS,CAACpB,YAAY,IAAIuB,UAAU,CAACD,CAAC,CAACtB,YAAY,CAAC;MACpDoB,SAAS,CAACnB,mBAAmB,IAAIsB,UAAU,CAACD,CAAC,CAACrB,mBAAmB,CAAC;MAClEmB,SAAS,CAACxB,UAAU,IAAI2B,UAAU,CAACD,CAAC,CAAC1B,UAAU,CAAC;MAChDwB,SAAS,CAAClB,QAAQ,IAAIqB,UAAU,CAACD,CAAC,CAACpB,QAAQ,CAAC;MAC5CkB,SAAS,CAACjB,YAAY,IAAIoB,UAAU,CAACD,CAAC,CAACnB,YAAY,CAAC;MACpDiB,SAAS,CAAChB,aAAa,IAAImB,UAAU,CAACD,CAAC,CAAClB,aAAa,CAACoB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACzE;IAEA,MAAMC,QAAQ,GAAG;MACf1B,YAAY,EAAE,CAACqB,SAAS,CAACrB,YAAY,GAAGQ,eAAe,EAAEnB,OAAO,CAAC,CAAC,CAAC;MACnEY,YAAY,EAAE,CAACoB,SAAS,CAACpB,YAAY,GAAGO,eAAe,EAAEnB,OAAO,CAAC,CAAC,CAAC;MACnEa,mBAAmB,EAAE,CAACmB,SAAS,CAACnB,mBAAmB,GAAGM,eAAe,EAAEnB,OAAO,CAAC,CAAC,CAAC;MACjFQ,UAAU,EAAE,CAACwB,SAAS,CAACxB,UAAU,GAAGW,eAAe,EAAEnB,OAAO,CAAC,CAAC,CAAC;MAC/Dc,QAAQ,EAAE,CAACkB,SAAS,CAAClB,QAAQ,GAAGK,eAAe,EAAEnB,OAAO,CAAC,CAAC,CAAC;MAC3De,YAAY,EAAE,CAACiB,SAAS,CAACjB,YAAY,GAAGI,eAAe,EAAEnB,OAAO,CAAC,CAAC,CAAC;MACnEgB,aAAa,EAAG,CAACgB,SAAS,CAAChB,aAAa,GAAGG,eAAe,EAAEnB,OAAO,CAAC,CAAC,CAAC,GAAI;IAC5E,CAAC;IAED8B,qBAAqB,CAACO,QAAQ,CAAC;EACjC,CAAC;EAED,oBACE7F,OAAA;IAAK8F,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB/F,OAAA;MAAQ8F,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxB/F,OAAA;QAAA+F,QAAA,EAAI;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAETnG,OAAA;MAAK8F,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtB/F,OAAA;QAAK8F,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/B/F,OAAA;UAAK8F,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAEvB/F,OAAA;YAAK8F,SAAS,EAAC,mBAAmB;YAAAC,QAAA,eAChC/F,OAAA;cAAK8F,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB/F,OAAA;gBAAA+F,QAAA,EAAI;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAEtBnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAAuB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACtCnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACb5D,GAAG,EAAC,GAAG;kBACP6D,KAAK,EAAE1B,eAAgB;kBACvB2B,QAAQ,EAAGC,CAAC,IAAK3B,kBAAkB,CAAC4B,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAAmB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClCnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACb5D,GAAG,EAAC,GAAG;kBACP6D,KAAK,EAAE1F,WAAY;kBACnB2F,QAAQ,EAAGC,CAAC,IAAK1B,cAAc,CAAC6B,QAAQ,CAACH,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC9BnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACbC,KAAK,EAAEzF,QAAS;kBAChB0F,QAAQ,EAAGC,CAAC,IAAKzB,WAAW,CAAC0B,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3D,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC7BnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACbO,IAAI,EAAC,KAAK;kBACVN,KAAK,EAAExF,UAAW;kBAClByF,QAAQ,EAAGC,CAAC,IAAKxB,aAAa,CAACyB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC9BnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACbC,KAAK,EAAEvF,SAAU;kBACjBwF,QAAQ,EAAGC,CAAC,IAAKvB,YAAY,CAACwB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5D,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAA8B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC7CnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACbO,IAAI,EAAC,MAAM;kBACXN,KAAK,EAAEtF,iBAAkB;kBACzBuF,QAAQ,EAAGC,CAAC,IAAKtB,oBAAoB,CAACuB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAAyB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACxCnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACbO,IAAI,EAAC,MAAM;kBACXN,KAAK,EAAErF,WAAY;kBACnBsF,QAAQ,EAAGC,CAAC,IAAKrB,cAAc,CAACsB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9D,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAAoB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACnCnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACbO,IAAI,EAAC,MAAM;kBACXN,KAAK,EAAEpF,aAAc;kBACrBqF,QAAQ,EAAGC,CAAC,IAAKpB,gBAAgB,CAACqB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAK8F,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B/F,OAAA;kBAAA+F,QAAA,EAAO;gBAAmB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClCnG,OAAA;kBACEoG,IAAI,EAAC,QAAQ;kBACbC,KAAK,EAAEnF,gBAAiB;kBACxBoF,QAAQ,EAAGC,CAAC,IAAKnB,mBAAmB,CAACoB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENnG,OAAA;gBAAQ4G,OAAO,EAAErB,kBAAmB;gBAACO,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAE7D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNnG,OAAA;YAAK8F,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9B/F,OAAA;cAAK8F,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB/F,OAAA;gBAAA+F,QAAA,GAAI,uBAAqB,EAACpB,eAAe,EAAC,gBAAc;cAAA;gBAAAqB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAE5Dd,kBAAkB,gBACjBrF,OAAA;gBAAK8F,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EACjCc,MAAM,CAACC,OAAO,CAACzB,kBAAkB,CAAC,CAACrC,GAAG,CAAC,CAAC,CAAC+D,GAAG,EAAEV,KAAK,CAAC,kBACnDrG,OAAA;kBAAe8F,SAAS,EAAC,SAAS;kBAAAC,QAAA,gBAChC/F,OAAA;oBAAA+F,QAAA,EAAKgB,GAAG,CAACnB,OAAO,CAAC,UAAU,EAAE,KAAK;kBAAC;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACzCnG,OAAA;oBAAA+F,QAAA,EAAIM;kBAAK;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA,GAFNY,GAAG;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGR,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,gBAENnG,OAAA;gBAAG8F,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAC;cAEzB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CACJ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CAhMuBD,iBAAiB;AAAAuC,EAAA,GAAjBvC,iBAAiB;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}