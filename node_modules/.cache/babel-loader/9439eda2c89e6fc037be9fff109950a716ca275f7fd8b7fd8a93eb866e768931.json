{"ast":null,"code":"var _jsxFileName = \"/Users/taniaperez/Documents/GitHub/diagramas_de_flujos/src/components/MethodsGrid/MethodsGrid.jsx\";\nimport Card from \"../Card/Card\";\nimport styles from \"./MethodsGrid.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  id: \"cuadrados\",\n  title: \"Juego del dado\",\n  text: \"el apostador lanza 2 dados y si saca 7 en la suma de los dos dados gana caso contrario pierde, costo del juego es de 2 Bs. y la perdida de la casa si el jugador gana es de 5 Bs., simule el juego para 10 lanzamientos y determine la ganancia neta de la casa, el numero de juegos que gana la casa, el porcentaje de juegos que gana la casa. Conviene implementar este juego de azar?\"\n}, {\n  id: \"productos\",\n  title: \"Agencia de azúcar\",\n  text: \"La demanda de azúcar en una tienda sigue una distribución exponencial con media de 100 Kg/día. El dueño de la tienda revisa el inventario cada 7 días y hace un pedido a la planta igual a la capacidad de la bodega menos la cantidad de azúcar que tiene disponible en ese momento: la entrega no es inmediata y sigue una distribución uniforme entre 1 y 3 días. La demanda no surtida por falta de existencias representa ventas perdidas. La capacidad de almacenamiento de la bodega es de 700 Kgrs. El costo de ordenar es de 100 Bs./orden. El costo de llevar el inventario es igual a 0.1 Bs./Kg, el costo de adquisición es igual a 3.5 Bs/Kgr y el precio de venta igual 5 Bs/Kgr. Determinar el comportamiento del inventario a lo largo del tiempo, el costo y la ganancia neta, la demanda insatisfecha para un horizonte de dos meses. Sera la capacidad del almacén suficiente? Bs./Kg, el costo de adquisición es igual a 3.5 Bs/Kgr y el precio de venta igual 5 Bs/Kgr. Determinar el comportamiento del inventario a lo largo del tiempo, el costo y la ganancia neta, la demanda insatisfecha para un horizonte de dos meses. Sera lacapacidad del almacén suficiente?\"\n}, {\n  id: \"lineal\",\n  title: \"Llegada de clientes a tienda\",\n  text: \"Las llegadas de los clientes a una tienda, sigue una distribución uniforme: 2 ± 2, por hora y cada cliente compra artículos de acuerdo con una función de probabilidad basada en los articulos. Mediante el desarrollo de un modelo de simulación, determine la ganancia neta del dueño y la cantidad de artículos vendidos de ese día si sus costos por día asciende a 300 Bs y el costo del articulo es igual A 50 Bs y el precio de venta es igual a 75 Bs.\"\n}, {\n  id: \"multiplicativo\",\n  title: \"Gallina ponedora de huevos\",\n  text: \"Un granjero tiene una gallina que pone huevos a una razón Poisson con media de 1 huevos por día. El 20% de los huevos se rompen, del 30% de ellos nacen pollos y el resto permanecen como huevos. De los pollos el 20% muere y el 80% sobreviven. Simule este sistema por cierta cantidad de días y determine el ingreso promedio del granjero tomando en cuenta ciertos precios por los huevos y por los pollos\"\n}];\nexport default function MethodsGrid() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    id: \"inicio\",\n    \"aria-label\": \"M\\xE9todos de generaci\\xF3n\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"section-title\",\n      children: \"Implementacion Diagramas de Flujo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"section-subtitle\",\n      children: \"Una herramienta esencial para definir la estructura l\\xF3gica del modelo de simulaci\\xF3n es el diagrama de flujo, el cual ayuda a entender la l\\xF3gica del sistema bajo estudio, tambi\\xE9n ilustra el rol que tienen las entradas y las salidas del modelo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: items.map(it => /*#__PURE__*/_jsxDEV(Card, {\n        title: it.title,\n        onClick: () => console.log(it.id),\n        children: it.text\n      }, it.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = MethodsGrid;\nvar _c;\n$RefreshReg$(_c, \"MethodsGrid\");","map":{"version":3,"names":["Card","styles","jsxDEV","_jsxDEV","items","id","title","text","MethodsGrid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","grid","map","it","onClick","console","log","_c","$RefreshReg$"],"sources":["/Users/taniaperez/Documents/GitHub/diagramas_de_flujos/src/components/MethodsGrid/MethodsGrid.jsx"],"sourcesContent":["import Card from \"../Card/Card\";\nimport styles from \"./MethodsGrid.module.css\";\n\nconst items = [\n  {\n    id: \"cuadrados\",\n    title: \"Juego del dado\",\n    text:\n      \"el apostador lanza 2 dados y si saca 7 en la suma de los dos dados gana caso contrario pierde, costo del juego es de 2 Bs. y la perdida de la casa si el jugador gana es de 5 Bs., simule el juego para 10 lanzamientos y determine la ganancia neta de la casa, el numero de juegos que gana la casa, el porcentaje de juegos que gana la casa. Conviene implementar este juego de azar?\"\n  },\n  {\n    id: \"productos\",\n    title: \"Agencia de azúcar\",\n    text:\n      \"La demanda de azúcar en una tienda sigue una distribución exponencial con media de 100 Kg/día. El dueño de la tienda revisa el inventario cada 7 días y hace un pedido a la planta igual a la capacidad de la bodega menos la cantidad de azúcar que tiene disponible en ese momento: la entrega no es inmediata y sigue una distribución uniforme entre 1 y 3 días. La demanda no surtida por falta de existencias representa ventas perdidas. La capacidad de almacenamiento de la bodega es de 700 Kgrs. El costo de ordenar es de 100 Bs./orden. El costo de llevar el inventario es igual a 0.1 Bs./Kg, el costo de adquisición es igual a 3.5 Bs/Kgr y el precio de venta igual 5 Bs/Kgr. Determinar el comportamiento del inventario a lo largo del tiempo, el costo y la ganancia neta, la demanda insatisfecha para un horizonte de dos meses. Sera la capacidad del almacén suficiente? Bs./Kg, el costo de adquisición es igual a 3.5 Bs/Kgr y el precio de venta igual 5 Bs/Kgr. Determinar el comportamiento del inventario a lo largo del tiempo, el costo y la ganancia neta, la demanda insatisfecha para un horizonte de dos meses. Sera lacapacidad del almacén suficiente?\"\n  },\n  {\n    id: \"lineal\",\n    title: \"Llegada de clientes a tienda\",\n    text:\n      \"Las llegadas de los clientes a una tienda, sigue una distribución uniforme: 2 ± 2, por hora y cada cliente compra artículos de acuerdo con una función de probabilidad basada en los articulos. Mediante el desarrollo de un modelo de simulación, determine la ganancia neta del dueño y la cantidad de artículos vendidos de ese día si sus costos por día asciende a 300 Bs y el costo del articulo es igual A 50 Bs y el precio de venta es igual a 75 Bs.\"\n  },\n  {\n    id: \"multiplicativo\",\n    title: \"Gallina ponedora de huevos\",\n    text:\n      \"Un granjero tiene una gallina que pone huevos a una razón Poisson con media de 1 huevos por día. El 20% de los huevos se rompen, del 30% de ellos nacen pollos y el resto permanecen como huevos. De los pollos el 20% muere y el 80% sobreviven. Simule este sistema por cierta cantidad de días y determine el ingreso promedio del granjero tomando en cuenta ciertos precios por los huevos y por los pollos\"\n  }\n];\n\nexport default function MethodsGrid() {\n  return (\n    <section className=\"container\" id=\"inicio\" aria-label=\"Métodos de generación\">\n      <h1 className=\"section-title\">Implementacion Diagramas de Flujo</h1>\n      <p className=\"section-subtitle\">\n        Una herramienta esencial para definir la estructura lógica del modelo de simulación es\n        el diagrama de flujo, el cual ayuda a entender la lógica del sistema bajo estudio, también ilustra el rol que\n        tienen las entradas y las salidas del modelo.\n      </p>\n\n      <div className={styles.grid}>\n        {items.map((it) => (\n          <Card key={it.id} title={it.title} onClick={() => console.log(it.id)}>\n            {it.text}\n          </Card>\n        ))}\n      </div>\n    </section>\n  );\n}\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAG,CACZ;EACEC,EAAE,EAAE,WAAW;EACfC,KAAK,EAAE,gBAAgB;EACvBC,IAAI,EACF;AACJ,CAAC,EACD;EACEF,EAAE,EAAE,WAAW;EACfC,KAAK,EAAE,mBAAmB;EAC1BC,IAAI,EACF;AACJ,CAAC,EACD;EACEF,EAAE,EAAE,QAAQ;EACZC,KAAK,EAAE,8BAA8B;EACrCC,IAAI,EACF;AACJ,CAAC,EACD;EACEF,EAAE,EAAE,gBAAgB;EACpBC,KAAK,EAAE,4BAA4B;EACnCC,IAAI,EACF;AACJ,CAAC,CACF;AAED,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,oBACEL,OAAA;IAASM,SAAS,EAAC,WAAW;IAACJ,EAAE,EAAC,QAAQ;IAAC,cAAW,6BAAuB;IAAAK,QAAA,gBAC3EP,OAAA;MAAIM,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpEX,OAAA;MAAGM,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAIhC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEJX,OAAA;MAAKM,SAAS,EAAER,MAAM,CAACc,IAAK;MAAAL,QAAA,EACzBN,KAAK,CAACY,GAAG,CAAEC,EAAE,iBACZd,OAAA,CAACH,IAAI;QAAaM,KAAK,EAAEW,EAAE,CAACX,KAAM;QAACY,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAACH,EAAE,CAACZ,EAAE,CAAE;QAAAK,QAAA,EAClEO,EAAE,CAACV;MAAI,GADCU,EAAE,CAACZ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACO,EAAA,GAnBuBb,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}